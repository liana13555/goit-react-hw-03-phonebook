{"version":3,"sources":["components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Title","styled","h2","SectionTitle","title","children","FormContact","form","FormButton","button","ContactForm","state","contacts","id","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","propOnSubmit","reset","onSubmit","this","type","pattern","required","onChange","Component","Filter","List","ol","ListItem","li","ButtonDelete","ContactList","onDelete","map","contact","onClick","Container","div","App","filter","addContact","data","find","toLowerCase","alert","newContact","uuidv4","prevState","changeFilter","getFilterContacts","normalizedFilter","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","console","log","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3fc3edb.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  text-transform: uppercase;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle ({title, children}) {\r\n    return (\r\n        <section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    // children: PropTypes.node.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const FormContact = styled.form`\r\n  max-width: 300px;\r\n  padding: 10px;\r\n\r\n  background-color: #a6d8dd;\r\n  border: 2px solid #1a223b;\r\n  border-radius: 5px;  \r\n  cursor: pointer; \r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  margin-top: 20px;\r\n  padding: 5px;\r\n  \r\n  background-color: #5283ec;\r\n  cursor: pointer; \r\n`;\r\n\r\n","import React, { Component } from 'react';\r\nimport { FormContact, FormButton } from './ContactForm.styled';\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.propOnSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({name: '', number: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormContact onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Name\r\n               <br />\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n\r\n            <br />\r\n            \r\n            <label> Number\r\n               <br />\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n\r\n\r\n           <br />\r\n          <FormButton type=\"submit\">\r\n            Add contact\r\n          </FormButton>\r\n         \r\n        </FormContact>  \r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange  }) => (\r\n    <label>\r\n        Find contacts by name\r\n        <br/>\r\n                <input\r\n                    type=\"text\"\r\n            value={value} onChange={onChange}/>\r\n    </label>\r\n);\r\n\r\nexport default Filter;\r\n       \r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ol`\r\n  max-width: 300px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\nmargin-bottom: 8px;\r\n \r\n`;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  margin-left: 8px;\r\n\r\n  background-color: #5283ec;\r\n  cursor: pointer; \r\n`;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport {List, ListItem, ButtonDelete} from './ContactList.styled';\r\n\r\nexport default function ContactList({ contacts, onDelete }) {   \r\n    return (\r\n        <List>\r\n            {contacts.map(contact => (\r\n                <ListItem key={contact.id} >{contact.name}: {contact.number}\r\n                    <ButtonDelete\r\n                        type=\"button\"\r\n                        onClick={() => onDelete(contact.id)}\r\n                    >\r\n                        Delete\r\n                    </ButtonDelete>                \r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 300px;\r\n  margin-top: 20px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 50px;\r\n  background-color: #a6d8dd;\r\n  border-radius: 10px;  \r\n`;","import React, { Component } from 'react';\nimport SectionTitle from '../SectionTitle';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport { Container } from './App.styled';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class App extends Component{\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      ],\n      filter: ''\n    };\n\n  addContact = data => {\n    if (this.state.contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    )) {\n      alert(`${data.name} is already in contacts.`);\n    } else if (this.state.contacts.find(\n      contact => contact.number === data.number)) {\n       alert(`This number ${data.number} is already in contacts`);\n    } else {\n      const newContact = {\n        id: uuidv4(),\n        name: data.name,\n        number: data.number,\n      };  \n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n    };\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    };\n  };\n\n\n  render() {\n      const { filter } = this.state;\n    return (\n      <Container>\n        <SectionTitle title=\"Phonebook\">\n          <ContactForm propOnSubmit={this.addContact} />  \n        </SectionTitle>\n\n        <SectionTitle title=\"Contacts\">\n          <Filter\n            value={filter}\n            onChange={this.changeFilter} />\n          <ContactList\n            contacts={this.getFilterContacts()}\n            onDelete={this.deleteContact} \n          />\n        </SectionTitle>        \n\n      </Container>\n    )\n  };\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}